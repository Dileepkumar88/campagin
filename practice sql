Select all the different values from the Country column in the Customers table.														
"
SELECT
 
DISTINCT
 Country FROM Customers;"														
Select all records where the first letter of the City is an "a" or a "c" or an "s".														
SELECT * FROM Customers														
WHERE City LIKE '[acs]%';														
Select all records where the first letter of the City starts with anything from an "a" to an "f".														
SELECT * FROM Customers														
WHERE City LIKE '[a-f]%';														
Select all records where the first letter of the City is NOT an "a" or a "c" or an "f".														
SELECT * FROM Customers														
WHERE City LIKE '[^acf]%';														
DISTINCT Means with out repeats														
Write a SQL query to show all the winners in Physics for 1970 together with the winner of Economics for 1971.										(table name noble_win)				
year        subject                winner                country          category														
SELECT * FROM noble_win where (subjest = 'physics' and year = 1970) union (select * from noble_win(where = subject 'Econom' and year = 1971));														
														
Write a SQL query to show all the winners of nobel prize in the year 1970 except the subject Physiology and Economics.														
select * from noble_win 														
where year = 1970 and subject not in ('Economics' and 'Physiology') 														
														
Write a SQL query to find all the details of 1970 winners by the ordered to subject and winner name; but the list contain the subject Economics and Chemistry at last.														
select * from noble_win where year = 1970 order by case when subject in ('eco' and 'che') then 1 else 0 end asc,subject,winner														
SELECT * FROM nobel_win WHERE year=1970 ORDER BY CASE WHEN subject IN ('Economics','Chemistry') THEN 1 ELSE 0 END ASC, subject, winner;														
														
Write a SQL query to display order number, purchase amount, the achieved and unachieved percentage (%) for those order which exceeds the 50% of the target value of 6000.														
ord_no      purch_amt   ord_date    customer_id  salesman_id														
----------  ----------  ----------  -----------  -----------														
70001       150.5       2012-10-05  3005         5002														
70009       270.65      2012-09-10  3001         5005														
70002       65.26       2012-10-05  3002         5001														
70004       110.5       2012-08-17  3009         5003														
70007       948.5       2012-09-10  3005         5002														
70005       2400.6      2012-07-27  3007         5001														
70008       5760        2012-09-10  3002         5001														
ans														
SELECT ord_no,purch_amt,														
(100*purch_amt)/6000 AS "Achieved %",														
(100*(6000-purch_amt)/6000) AS "Unachieved %"														
FROM  orders														
WHERE (100*purch_amt)/6000>50;														
														
														
														
Write a SQL statement to exclude the rows which satisfy 1) order dates are 2012-08-17 and purchase amount is below 1000 2) customer id is greater than 3005 and purchase amount is below 1000.														
ord_no      purch_amt   ord_date    customer_id  salesman_id														
----------  ----------  ----------  -----------  -----------														
70001       150.5       2012-10-05  3005         5002														
70009       270.65      2012-09-10  3001         5005														
70002       65.26       2012-10-05  3002         5001														
70004       110.5       2012-08-17  3009         5003														
70007       948.5       2012-09-10  3005         5002														
70005       2400.6      2012-07-27  3007         5001														
70008       5760        2012-09-10  3002         5001														
70010       1983.43     2012-10-10  3004         5006														
70003       2480.4      2012-10-10  3009         5003														
70012       250.45      2012-06-27  3008         5002														
70011       75.29       2012-08-17  3003         5007														
70013       3045.6      2012-04-25  3002         5001														
														
SELECT *														
FROM  orders														
WHERE NOT((ord_date ='2012-08-17'														
OR customer_id>3005)														
AND purch_amt<1000);


inner join																									
SELECT *																									
FROM table1																									
JOIN table2																									
ON table1.column_name = table2.column_name;																									
																									
																									
																									
###. Write a query in SQL to display the first name, last name, salary, and job grade for all employees.																									
																									
Sample table: employees																									
| EMPLOYEE_ID | FIRST_NAME  | LAST_NAME   | EMAIL    | PHONE_NUMBER       | HIRE_DATE  | JOB_ID     | SALARY   | COMMISSION_PCT | MANAGER_ID | DEPARTMENT_ID |																									
																									
Sample table: job_grades																									
GRADE_LEVEL  LOWEST_SAL HIGHEST_SAL																									
------------ ---------- -----------						
SELECT E.first_name, E.last_name, E.salary, J.grade_level FROM employees E JOIN job_grades J ON E.salary BETWEEN J.lowest_sal AND J.highest_sal;																																											
																									
																									
###. Write a query in SQL to display the job title, department name, full name (first and last name ) of employee, and starting date for all the jobs which started on or after 1st January, 1993 and ending with on or before 31 August, 1997.																									
																									
EMPLOYEE_ID | START_DATE | END_DATE   | JOB_ID     | DEPARTMENT_ID |																									
																									
| JOB_ID     | JOB_TITLE                       | MIN_SALARY | MAX_SALARY |																									
																									
																									
DEPARTMENT_ID | DEPARTMENT_NAME      | MANAGER_ID | LOCATION_ID |																									
																									
| EMPLOYEE_ID | FIRST_NAME  | LAST_NAME   | EMAIL    | PHONE_NUMBER       | HIRE_DATE  | JOB_ID     | SALARY   | COMMISSION_PCT | MANAGER_ID | DEPARTMENT_ID |																									
																									
																									
SELECT job_title, department_name, first_name || ' ' || last_name AS Employee_name, start_date FROM job_history JOIN jobs USING (job_id) JOIN departments USING (department_id) JOIN employees USING (employee_id) WHERE start_date>='1993-01-01' AND start_date<='1997-08-31';																									
																									
																									
																									
###. Write a query in SQL to display the country name, city, and number of those departments where at leaste 2 employees are working																									
																									
countries																									
COUNTRY_ID | COUNTRY_NAME             | REGION_ID																									
																									
locations																									
LOCATION_ID | STREET_ADDRESS                           | POSTAL_CODE | CITY                | STATE_PROVINCE    | COUNTRY_ID																									
																									
employees																									
EMPLOYEE_ID | FIRST_NAME  | LAST_NAME   | EMAIL    | PHONE_NUMBER       | HIRE_DATE  | JOB_ID     | SALARY   | COMMISSION_PCT | MANAGER_ID | DEPARTMENT_ID																									
																									
departments																									
DEPARTMENT_ID | DEPARTMENT_NAME      | MANAGER_ID | LOCATION_ID |																									
																									
SELECT country_name,city, COUNT(department_id) FROM countries JOIN locations USING (country_id) JOIN departments USING (location_id) WHERE department_id IN (SELECT department_id FROM employees GROUP BY department_id HAVING COUNT(department_id)>=2) GROUP BY country_name,city;																									
																									
